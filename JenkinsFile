pipeline {
    agent any

    environment {
        WORKSPACE = "/var/lib/jenkins/employee-management-system"
        DOCKER_IMAGE_TAG = "employee-management-system:${env.BUILD_NUMBER}"
    }

    stages {
        stage('Clone Repo') {
            steps {
                git branch: 'develop', 
                    url: 'https://github.com/masabdad/Employee_Management.git',
                    credentialsId: 'masabdad'
            }
        }

        stage('Build Docker') {
            steps {
                script {
                    // Build Docker image
                    dockerImage = docker.build(env.DOCKER_IMAGE_TAG)
                }
            }
        }

        stage('Deploy Docker') {
            steps {
                script {
                    echo "Docker Image Tag Name: ${env.DOCKER_IMAGE_TAG}"
                    
                    // Stop and remove the existing container if it exists
                    sh """
                    docker stop employee-management-system || true
                    docker rm employee-management-system || true
                    """

                    // Run the new Docker container
                    sh """
                    docker run --name employee-management-system -d -p 8081:8081 ${env.DOCKER_IMAGE_TAG}
                    """
                }
            }
        }
    }

    post {
        always {
            // Clean workspace after build
            cleanWs()
        }
        success {
            echo "Pipeline completed successfully!"
        }
        failure {
            echo "Pipeline failed!"
        }
    }
}
